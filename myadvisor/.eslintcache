[{"/Users/nevashgobin/Documents/myAdvisorDev/myadvisor/src/index.js":"1","/Users/nevashgobin/Documents/myAdvisorDev/myadvisor/src/App.js":"2","/Users/nevashgobin/Documents/myAdvisorDev/myadvisor/src/components/Main.js":"3","/Users/nevashgobin/Documents/myAdvisorDev/myadvisor/src/components/login.js":"4","/Users/nevashgobin/Documents/myAdvisorDev/myadvisor/src/components/TopBar.js":"5","/Users/nevashgobin/Documents/myAdvisorDev/myadvisor/src/components/Staff/Students.js":"6","/Users/nevashgobin/Documents/myAdvisorDev/myadvisor/src/components/Staff/Courses.js":"7","/Users/nevashgobin/Documents/myAdvisorDev/myadvisor/src/components/Staff/StaffDashboard.js":"8","/Users/nevashgobin/Documents/myAdvisorDev/myadvisor/src/components/CourseList.js":"9","/Users/nevashgobin/Documents/myAdvisorDev/myadvisor/src/components/CourseDetails.js":"10","/Users/nevashgobin/Documents/myAdvisorDev/myadvisor/src/components/Career.js":"11","/Users/nevashgobin/Documents/myAdvisorDev/myadvisor/src/components/StudentProfile.js":"12","/Users/nevashgobin/Documents/myAdvisorDev/myadvisor/src/components/Staff/CoursesTable.js":"13","/Users/nevashgobin/Documents/myAdvisorDev/myadvisor/src/components/Staff/AddCourse.js":"14","/Users/nevashgobin/Documents/myAdvisorDev/myadvisor/src/components/Staff/Calendar.js":"15","/Users/nevashgobin/Documents/myAdvisorDev/myadvisor/src/components/Staff/NavigationBlocks.js":"16","/Users/nevashgobin/Documents/myAdvisorDev/myadvisor/src/components/CourseNode.js":"17","/Users/nevashgobin/Documents/myAdvisorDev/myadvisor/src/components/PullCourses.js":"18","/Users/nevashgobin/Documents/myAdvisorDev/myadvisor/src/components/CareerCheck.js":"19","/Users/nevashgobin/Documents/myAdvisorDev/myadvisor/src/components/PullCareers.js":"20","/Users/nevashgobin/Documents/myAdvisorDev/myadvisor/src/components/NoTranscript.js":"21","/Users/nevashgobin/Documents/myAdvisorDev/myadvisor/src/components/DetailsCard.js":"22","/Users/nevashgobin/Documents/myAdvisorDev/myadvisor/src/components/Staff/EditCourse.js":"23","/Users/nevashgobin/Documents/myAdvisorDev/myadvisor/src/components/Staff/NavigationBlock.js":"24","/Users/nevashgobin/Documents/myAdvisorDev/myadvisor/src/components/sidebar.js":"25","/Users/nevashgobin/Documents/myAdvisorDev/myadvisor/src/components/LinearDeterminate.js":"26"},{"size":378,"mtime":1615323037211,"results":"27","hashOfConfig":"28"},{"size":488,"mtime":1615780004239,"results":"29","hashOfConfig":"28"},{"size":4386,"mtime":1615323037208,"results":"30","hashOfConfig":"28"},{"size":5137,"mtime":1615323037211,"results":"31","hashOfConfig":"28"},{"size":638,"mtime":1615323037211,"results":"32","hashOfConfig":"28"},{"size":133,"mtime":1615323037210,"results":"33","hashOfConfig":"28"},{"size":3584,"mtime":1615323037209,"results":"34","hashOfConfig":"28"},{"size":1336,"mtime":1615323037210,"results":"35","hashOfConfig":"28"},{"size":1977,"mtime":1615776866262,"results":"36","hashOfConfig":"28"},{"size":3063,"mtime":1615776866262,"results":"37","hashOfConfig":"28"},{"size":1723,"mtime":1615776866261,"results":"38","hashOfConfig":"28"},{"size":2955,"mtime":1615776866264,"results":"39","hashOfConfig":"28"},{"size":4158,"mtime":1615323037209,"results":"40","hashOfConfig":"28"},{"size":4257,"mtime":1615323037209,"results":"41","hashOfConfig":"28"},{"size":819,"mtime":1615323037209,"results":"42","hashOfConfig":"28"},{"size":1929,"mtime":1615323037210,"results":"43","hashOfConfig":"28"},{"size":1027,"mtime":1615776866262,"results":"44","hashOfConfig":"28"},{"size":618,"mtime":1615776866263,"results":"45","hashOfConfig":"28"},{"size":853,"mtime":1615776866261,"results":"46","hashOfConfig":"28"},{"size":618,"mtime":1615776866263,"results":"47","hashOfConfig":"28"},{"size":2212,"mtime":1615776866263,"results":"48","hashOfConfig":"28"},{"size":2612,"mtime":1615776866263,"results":"49","hashOfConfig":"28"},{"size":4500,"mtime":1615323037210,"results":"50","hashOfConfig":"28"},{"size":564,"mtime":1615323037210,"results":"51","hashOfConfig":"28"},{"size":2571,"mtime":1615858499830,"results":"52","hashOfConfig":"28"},{"size":1594,"mtime":1615782801273,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"8hlocg",{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"56"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"56"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"56"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"56"},"/Users/nevashgobin/Documents/myAdvisorDev/myadvisor/src/index.js",[],["121","122"],"/Users/nevashgobin/Documents/myAdvisorDev/myadvisor/src/App.js",["123"],"import { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\nimport React from \"react\";\nimport Main from './components/Main';\n\nimport './App.css';\nimport PermanentDrawerRight from \"./components/sidebar\";\n\nfunction App () {\n\n  return (\n      <Router>\n        <PermanentDrawerRight/>\n        <Switch>\n          <Route\n            path=\"/\"\n            render={(props) => <Main {...props} />}\n          />\n        </Switch>\n      </Router>\n  );\n}\n\nexport default App;\n","/Users/nevashgobin/Documents/myAdvisorDev/myadvisor/src/components/Main.js",["124","125","126","127","128","129","130","131","132","133","134","135"],"import React, { useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Redirect} from \"react-router-dom\";\n\n//Student Imports\nimport StudentProfile from './StudentProfile';\nimport CourseList from './CourseList';\nimport CourseDetails from './CourseDetails';\nimport Career from './Career';\n\n//Staff Imports\nimport StaffDashboard from './Staff/StaffDashboard';\nimport StaffCourses from './Staff/Courses';\nimport Students from './Staff/Students';\n\n//Global Imports\nimport \"../App.css\"\nimport \"../assets/css/Staff.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Login from \"./login\";\nimport TopBar from '../components/TopBar';\n\nfunction Main() {\n  const [isAuthenticated, setIsAuthenticated] = useState(localStorage.getItem(\"auth\"));\n  const [user, setUser] = useState(localStorage.getItem(\"user\"));\n\n  const setAuth = (boolean) => {\n    setIsAuthenticated(boolean);\n  };\n\n  const setType = (value) => {\n    setUser(value);\n  };\n\n  return (\n    <div className=\"main-panel\">\n      {user ? <TopBar></TopBar> : null}\n      <Switch>\n        <Route\n          exact\n          path=\"/\"\n          render={(props) =>\n            {\n              if(isAuthenticated && user==\"student\"){\n                return(<Redirect to=\"/home\"/>)\n              } else if (isAuthenticated && user==\"admin\"){\n                return(<Redirect to=\"/staff\"/>)\n              } else {\n                return(<Redirect to=\"/login\" />)\n              }\n            }\n          }\n        />\n\n        <Route\n          exact\n          path=\"/login\"\n          render={(props) =>\n            {\n              if(!isAuthenticated){\n                return <Login {...props} setAuth={setAuth} setType={setType}/>\n              } else if (isAuthenticated && user==\"admin\"){\n                return(<Redirect to=\"/staff\" />)\n              } else if (isAuthenticated && user==\"student\"){\n                return(<Redirect to=\"/home\" />)\n              }\n            }\n          }\n        />\n\n        {/*Student Routes*/}\n\n        <Route\n          exact\n          path=\"/home\"\n          render={(props) =>\n            {\n              if(isAuthenticated && user==\"student\"){\n                return <StudentProfile {...props} />\n              } else {\n                return(<Redirect to=\"/\" />)\n              }\n            }\n          }\n        />\n\n        <Route\n          exact\n          path=\"/courses\"\n          render={(props) =>\n            {\n              if(isAuthenticated && user==\"student\"){\n                return <CourseList {...props} />\n              } else {\n                return(<Redirect to=\"/\" />)\n              }\n            }\n          }\n        />\n\n        <Route\n          exact\n          path=\"/coursedetails\"\n          render={(props) =>\n            {\n              if(isAuthenticated && user==\"student\"){\n                return <CourseDetails {...props} />\n              } else {\n                return(<Redirect to=\"/\" />)\n              }\n            }\n          }\n        />\n\n        <Route\n          exact\n          path=\"/career\"\n          render={(props) =>\n            {\n              if(isAuthenticated && user==\"student\"){\n                return <Career {...props} />\n              } else {\n                return(<Redirect to=\"/\" />)\n              }\n            }\n          }\n        />    \n\n        {/*Staff Routes*/}\n        <Route\n          exact\n          path=\"/staff\"\n          render={(props) =>\n            {\n              if(isAuthenticated && user==\"admin\"){\n                return <StaffDashboard {...props} />\n              } else {\n                return(<Redirect to=\"/\" />)\n              }\n            }\n          }\n        />        \n\n        <Route\n          exact\n          path=\"/staff/courses\"\n          render={(props) =>\n            {\n              if(isAuthenticated && user==\"admin\"){\n                return <StaffCourses {...props} />\n              } else {\n                return(<Redirect to=\"/\" />)\n              }\n            }\n          }\n        />\n\n        <Route\n          exact\n          path=\"/staff/students\"\n          render={(props) =>\n            {\n              if(isAuthenticated && user==\"admin\"){\n                return <Students {...props} />\n              } else {\n                return(<Redirect to=\"/\" />)\n              }\n            }\n          }\n        />       \n\n\n\n\n      </Switch>\n\n    </div>\n  );\n}\n\nexport default Main;\n","/Users/nevashgobin/Documents/myAdvisorDev/myadvisor/src/components/login.js",[],"/Users/nevashgobin/Documents/myAdvisorDev/myadvisor/src/components/TopBar.js",["136","137"],"import React, { useState } from \"react\";\nimport { Link, Redirect } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Nav, Navbar, Button } from 'react-bootstrap';\n\nfunction TopBar() {\n\n  function logOut(){\n    localStorage.clear();\n    window.location.reload(false);\n  }\n\n  return (\n    <Navbar expand=\"lg\" bg=\"primary\" variant=\"dark\">\n      <Navbar.Brand><Link to=\"/\" className=\"top-bar-text\">myAdvisor</Link></Navbar.Brand>\n      \n        <Nav className=\"ml-auto\">\n          <Button variant=\"outline-light\" onClick={logOut}>Log Out</Button>\n        </Nav>\n    \n    </Navbar>\n  );\n}\n\nexport default TopBar;\n","/Users/nevashgobin/Documents/myAdvisorDev/myadvisor/src/components/Staff/Students.js",[],"/Users/nevashgobin/Documents/myAdvisorDev/myadvisor/src/components/Staff/Courses.js",["138"],"import React, { useState, useEffect } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport CoursesTable from \"./CoursesTable\";\nimport AddCourse from \"./AddCourse\";\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\n\nfunction Courses() {\n    //Add Course Modal\n    const [show, setShow] = useState(false);\n    const handleShow = () => setShow(true);\n    const handleClose = () => setShow(false);\n\n    //Table\n    const [courses, setCourses] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n    //Toast\n    const notifyDelete = (text) => toast.error(text);\n\n    //Get Courses\n    async function getCourses() {\n        try {\n          const res = await fetch(\"http://localhost:5000/courses/all\", {\n            method: \"GET\",\n          });\n    \n          const parseData = await res.json();\n          setCourses(parseData);\n          setLoading(false);\n          \n        } catch (err) {\n          console.error(err.message);\n        }\n    }\n\n    //Delete Course\n    async function deleteCourse(courseCode) {\n        try {\n          const res = await fetch(\"http://localhost:5000/courses/delete/\" + courseCode, {\n            method: \"DELETE\",\n            headers: {\n                token: localStorage.getItem(\"token\")\n            },\n          });\n    \n            setLoading(false);\n            refreshTable();\n            notifyDelete(courseCode + \" Deleted\")\n          \n        } catch (err) {\n            notifyDelete(err.message)\n            console.error(err.message);\n        }\n    }\n\n    function confirmDelete(courseCode){\n        confirmAlert({\n          title: 'Delete Confirmation',\n          message: 'Are you sure to do delete ' + courseCode + \"?\",\n          buttons: [\n            {\n              label: 'Yes',\n              onClick: () => deleteCourse(courseCode)\n            },\n            {\n              label: 'No',\n            }\n          ]\n        });\n    };\n\n    useEffect(() => {\n        getCourses();\n    }, []);\n\n\n    function refreshTable(){\n        setLoading(true);\n        getCourses();\n    }\n\n    return (\n        <>\n            <div class=\"container\">\n                <div class=\"row mt-4\">\n                    {/* Courses Table */}\n                    <div class=\"col-10\">\n                        <div class=\"card h-100\">\n                            <div class=\"card-body shadow-sm\">\n                                <CoursesTable courses={courses} loading={loading} confirmDelete={confirmDelete} refreshTable={refreshTable}/>\n                            </div>\n                        </div>\n                    </div>\n\n                    {/* Buttons */}\n                    <div class=\"col\">\n                        <button type=\"button\" class=\"btn btn-custom add-course\" onClick={handleShow}>Add Course</button>\n                    </div>\n\n                    <Modal show={show} onHide={handleClose} size=\"lg\">\n                        <Modal.Header closeButton>\n                            <Modal.Title>Add Course</Modal.Title>\n                        </Modal.Header>\n\n                        <Modal.Body>\n                            <AddCourse setShow={setShow} refreshTable={refreshTable}/>\n                        </Modal.Body>\n                    </Modal>\n                </div>\n            </div>\n            <ToastContainer \n                pauseOnHover\n                position=\"bottom-right\"\n            />\n        </>\n    );\n}\n\nexport default Courses;","/Users/nevashgobin/Documents/myAdvisorDev/myadvisor/src/components/Staff/StaffDashboard.js",[],"/Users/nevashgobin/Documents/myAdvisorDev/myadvisor/src/components/CourseList.js",["139","140"],"import React, { useEffect, useState } from \"react\";\nimport { useHistory } from 'react-router-dom'\nimport CourseNode from './CourseNode'\nimport PullCourses from \"./PullCourses\";\nimport \"../assets/css/Courses.css\";\nimport CourseDetails from \"./CourseDetails\";\n\nconst CourseList = () => { \n    const [clicked, setClicked] = useState(false);\n    const [course, setCourse] = useState(null);\n\n    const nodeClickHandler = (course) => {\n      setClicked(true)\n      setCourse(course)\n    }\n\n    const backClicked = () => {\n      setClicked(false)\n    }\n\n    var courses = PullCourses();\n\n    return (\n      <div className=\"content\">\n        {clicked ? (\n              <CourseDetails backClicked={backClicked} course={course}></CourseDetails>\n            ) : (\n            <div className=\"container-fluid\">\n                <p className=\"header blue-txt\">Select Courses</p>\n                <div className=\"card details-card outer-card\">\n                    <div className=\"card-body\">\n                        <p className=\"courselist-card-text\">Click on a course to see more details</p>\n                        <div className=\"card courselist-card custom-scroll\">\n                            <div className=\"card-body\">{\n                              Array.from({ length: courses.length }, (_, k) => (\n                                <CourseNode course={courses[k]} code={courses[k].courseCode} title={courses[k].courseTitle} credits={courses[k].credits} clickHandler={nodeClickHandler}></CourseNode>\n                              ))}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-sm-2\">\n                      <button type=\"button\" class=\"btn btn-custom course-next-button blue-button\">Next</button>\n                    </div>\n                </div>\n            </div>\n            ) }\n      </div>\n    );\n  \n}\n\nexport default CourseList;\n","/Users/nevashgobin/Documents/myAdvisorDev/myadvisor/src/components/CourseDetails.js",["141","142"],"import React, { Component } from \"react\";\nimport { Link } from 'react-router-dom'\n\nclass CourseDetails extends Component {\n\n    render() {\n\n    const desc = \"This course provides an introduction to artificial intelligence and its applications. The course concentrates on solving problems associated with artificial intelligence using data mining and knowledge representation tools. Topics covered in the course include characteristics of intelligent systems, rule-based Expert Systems, production rules, reasoning with uncertainty, search strategies, artificial neural networks, genetic algorithms, knowledge engineering and data mining.\"\n\n    return (\n      <div className=\"content\">\n            <div className=\"container-fluid\">\n                <p className=\"header blue-txt\">Select Courses</p>\n                <div className=\"card details-card\">\n                    <div className=\"card-body\">\n                        <p className=\"course-code blue-txt\">{this.props.course.courseCode}</p>\n                        <p className=\"course-title\">{this.props.course.courseTitle}</p>\n                        <div className=\"prereqs\">\n                            <span className=\"prereq-header blue-txt\">Pre-requisites: </span>\n                            <span className=\"prereq-courses\">{this.props.course.prerequisites}</span>\n                        </div>\n                        <div className=\"career\">\n                            <span className=\"career-header blue-txt\">Career Tags: </span>\n                            <span className=\"career-tags\">Artificial Intelligence, Machine Learning, Data Science</span>\n                        </div>\n                        <p className=\"course-desc\">{this.props.course.description}</p>\n                        <p className=\"assessment-header blue-txt\">Assessment</p>\n                        <div className=\"row assessment\">\n                            <div className=\"col-sm-2\">\n                                <p className=\"assessment-type\">Coursework:</p>\n                            </div>\n                            <div className=\"col-sm-2\">\n                                <p className=\"assessment-weight\">50%</p>\n                            </div>\n                        </div>\n                        <div className=\"row assessment\">\n                            <div className=\"col-sm-2\">\n                                <p className=\"assessment-type\">Final Exam:</p>\n                            </div>\n                            <div className=\"col-sm-2\">\n                                <p className=\"assessment-weight\">50%</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-sm-2\">\n                        <button type=\"button\" class=\"btn btn-custom course-back-button blue-button\" onClick={this.props.backClicked}>Back</button>\n                    </div>\n                </div>\n            </div>\n      </div>\n    );\n  }\n}\n\nexport default CourseDetails;\n","/Users/nevashgobin/Documents/myAdvisorDev/myadvisor/src/components/Career.js",["143"],"import React, { Component } from \"react\";\nimport CareerCheck from './CareerCheck';\nimport \"../assets/css/Career.css\";\nimport { Link } from 'react-router-dom'\nimport PullCareers from \"./PullCareers\";\n\nconst Career = () => {\n\n  var careers = PullCareers();\n\n  return (\n    <div className=\"content\">\n          <div className=\"container-fluid\">\n          <p className=\"header blue-txt\">Career Path</p>\n              <form>\n                  <div className=\"card details-card outer-card\">\n                    <div className=\"card-body career-card custom-scroll\">\n                      <p className=\"career-card-text\">Select any career paths you may be interested in pursuing</p>\n                        <table class=\"table table-borderless table-striped\">\n                          <thead>\n                              <tr class=\"d-flex blue-txt\">\n                                  <th class=\"col-3 name-cell\">Career Title</th>\n                                  <th class=\"col-9 desc-cell\">Description</th>\n                              </tr>\n                          </thead>\n                          <tbody>\n                            <CareerCheck careers={careers}></CareerCheck>\n                          </tbody>\n                        </table>\n                      </div>\n                  </div>\n                  <div className=\"row\">\n                      <Link to=\"/courses\">\n                        <div className=\"col-sm-2\">\n                            <button type=\"submit\" class=\"btn btn-custom career-next-button blue-button\">Next</button>\n                        </div>\n                      </Link>\n                  </div>\n              </form>\n          </div>\n    </div>\n  );\n}\n\nexport default Career;\n","/Users/nevashgobin/Documents/myAdvisorDev/myadvisor/src/components/StudentProfile.js",[],"/Users/nevashgobin/Documents/myAdvisorDev/myadvisor/src/components/Staff/CoursesTable.js",["144","145","146"],"import React, { useState, useEffect } from \"react\";\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory, { PaginationProvider, PaginationListStandalone } from 'react-bootstrap-table2-paginator';\nimport ToolkitProvider, { Search, CSVExport } from 'react-bootstrap-table2-toolkit';\nimport { Modal, Button } from \"react-bootstrap\";\nimport EditCourse from \"./EditCourse\";\nimport \"../../assets/css/Staff.css\";\n\n//TABLE SETUP\n\nconst columns = [\n    { dataField: 'courseCode', text: 'Course Code', csvText: 'Course Code', sort: true },\n    { dataField: 'courseTitle', text: 'Course Title', csvText: 'Course Title' },\n    { dataField: 'credits', text: 'Credits', csvText: 'Credits', sort: true },\n    { dataField: 'semester', text: 'Semester', csvText: 'Semester', sort: true },\n]\n\nconst defaultSorted = [{\n  dataField: 'courseCode',\n  order: 'asec'\n}];\n\nconst options = {\n  custom: true,\n  paginationSize: 5,\n  pageStartIndex: 1,\n  firstPageText: 'First',\n  prePageText: 'Back',\n  nextPageText: 'Next',\n  lastPageText: 'Last',\n  sizePerPage: 8,\n};\n\nconst { SearchBar, ClearSearchButton  } = Search;\nconst { ExportCSVButton } = CSVExport;\n\nfunction CoursesTable({courses, loading, refreshTable, confirmDelete}) {\n\n    //Edit Course Modal\n    const [show, setShow] = useState(false);\n    const handleShow = () => setShow(true);\n    const handleClose = () => setShow(false);\n\n    const [row, setRow] = useState();\n\n    //REQUESTS\n\n    function eCourse(row) {\n      setShow(true);\n      setRow(row);\n    }\n\n    function dCourse(courseCode) {\n      confirmDelete(courseCode);\n    }\n\n    //EXPANDED TABLE ROW\n\n    const expandRow = {\n        onlyOneExpanding: true,\n        renderer: row => (\n          <div>\n            <h3>{ `${row.courseCode}` } - { `${row.courseTitle}` }</h3>\n            <br/>\n            <h4>Description</h4>\n            <p>{ `${row.description}` }</p>\n\n            <h4>Prerequisites</h4>\n            <p>{ `${row.prerequisites}` }</p>\n\n            <div class=\"btn-group\">\n              <button type=\"button\" class=\"btn btn-custom edit-course\" onClick={() => eCourse(row)}>Edit</button>\n              <button type=\"button\" class=\"btn btn-danger delete-course\" onClick={() => dCourse(row.courseCode)}>Delete</button>\n            </div>\n          </div>\n        )\n    };\n\n    //TABLE\n\n    const table = ({ paginationProps, paginationTableProps }) => (\n        <>\n            <ToolkitProvider\n                    keyField=\"courseCode\"\n                    data={ courses }\n                    columns={ columns }\n                    search\n                    exportCSV={{\n                      fileName: 'courses.csv',\n                    }}\n                >\n                {\n                    props => (\n                    <div>\n                        <SearchBar { ...props.searchProps } />\n                        <ClearSearchButton { ...props.searchProps } />\n                        <ExportCSVButton { ...props.csvProps }>Export CSV</ExportCSVButton>\n                        <BootstrapTable { ...props.baseProps } { ...paginationTableProps } expandRow={ expandRow } defaultSorted={ defaultSorted }/>\n                    </div>\n                    )\n                }\n            </ToolkitProvider>\n            <PaginationListStandalone { ...paginationProps } />\n        </>\n  );\n\n  return (\n      <>\n          {loading ? (\n            <div class=\"d-flex justify-content-center\">\n              <div class=\"spinner-border text-primary\" role=\"status\">\n                <span class=\"sr-only\">Loading...</span>\n              </div>\n            </div>\n          ) : (\n            <PaginationProvider pagination={paginationFactory(options)}>\n              { table }\n            </PaginationProvider>\n          )}\n\n          <Modal show={show} onHide={handleClose} size=\"lg\">\n              <Modal.Header closeButton>\n                  <Modal.Title>Edit Course</Modal.Title>\n              </Modal.Header>\n\n              <Modal.Body>\n                <EditCourse setShow={setShow} row={row} refreshTable={refreshTable}/>\n              </Modal.Body>\n          </Modal>\n        \n      </>\n\n  );\n}\n\nexport default CoursesTable;","/Users/nevashgobin/Documents/myAdvisorDev/myadvisor/src/components/Staff/AddCourse.js",["147"],"import React, { useState } from \"react\";\nimport { Button, Form, Col } from \"react-bootstrap\";\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nfunction AddCourse({setShow, refreshTable}) {\n    const [validated, setValidated] = useState(false);\n\n    //Toast\n    const notifyAdded = (text) => toast.success(text);\n\n    const handleSubmit = (event) => {\n        const form = event.currentTarget;\n\n        if (form.checkValidity() === false) {\n          event.preventDefault();\n          event.stopPropagation();\n        }\n\n        event.preventDefault();\n        event.stopPropagation();\n        setValidated(true);\n\n        const formData = {\n            courseCode : (form.elements.courseCode.value).replace(/\\s+/g, ''),\n            courseTitle : form.elements.courseTitle.value,\n            credits : form.elements.credits.value,\n            semester : form.elements.semester.value,\n            level : form.elements.level.value,\n            prerequisites : form.elements.prerequisites.value,\n            description: form.elements.description.value\n        }\n\n        addCourse(formData)\n    };\n\n\n    async function addCourse(data) {\n        try {\n          const res = await fetch(\"http://localhost:5000/courses/add\", {\n            method: \"POST\",\n            headers: {\n                token: localStorage.getItem(\"token\"),\n                \"Content-type\": \"application/json\",\n            },\n            body: JSON.stringify(data),\n          });\n    \n          setShow(false);\n          refreshTable();\n          notifyAdded(data.courseCode + \" Added!\")\n\n          const status = await res.statusText;\n          \n        } catch (err) {\n          console.error(err.message);\n        }\n    }\n\n    return (\n        <>\n            <Form noValidate validated={validated} onSubmit={handleSubmit}>\n                <Form.Group controlId=\"courseCode\">\n                    <Form.Label>Course Code</Form.Label>\n                    <Form.Control required type=\"text\"/>\n                </Form.Group>\n\n                <Form.Group controlId=\"courseTitle\">\n                    <Form.Label>Course Title</Form.Label>\n                    <Form.Control required type=\"text\"/>\n                </Form.Group>\n\n                <Form.Row>\n                    <Form.Group as={Col} md=\"4\" controlId=\"credits\">\n                        <Form.Label>Credits</Form.Label>\n                        <Form.Control required as=\"select\">\n                            <option>1</option>\n                            <option>2</option>\n                            <option>3</option>\n                            <option>4</option>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group as={Col} md=\"4\" controlId=\"semester\">\n                        <Form.Label>Semester</Form.Label>\n                        <Form.Control required as=\"select\">\n                            <option>1</option>\n                            <option>2</option>\n                            <option>3</option>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group as={Col} md=\"4\" controlId=\"level\">\n                        <Form.Label>Level</Form.Label>\n                        <Form.Control required as=\"select\">\n                            <option>I</option>\n                            <option>II</option>\n                            <option>III</option>\n                        </Form.Control>\n                    </Form.Group>\n\n                </Form.Row>\n\n                <Form.Group controlId=\"prerequisites\">\n                    <Form.Label>Prerequisites</Form.Label>\n                    <Form.Control required type=\"text\"/>\n                </Form.Group>\n\n                <Form.Group controlId=\"description\">\n                    <Form.Label>Description</Form.Label>\n                    <Form.Control required as=\"textarea\" rows={3}/>\n                </Form.Group>\n\n                <div class=\"float-right\"><Button type=\"submit\" class=\"btn btn-custom\">Submit</Button></div>\n            </Form>\n\n            <ToastContainer \n                pauseOnHover\n                position=\"bottom-right\"\n            />\n        </>\n    );\n}\n\nexport default AddCourse;","/Users/nevashgobin/Documents/myAdvisorDev/myadvisor/src/components/Staff/Calendar.js",[],"/Users/nevashgobin/Documents/myAdvisorDev/myadvisor/src/components/Staff/NavigationBlocks.js",[],"/Users/nevashgobin/Documents/myAdvisorDev/myadvisor/src/components/CourseNode.js",["148"],"import React, { Component } from \"react\";\nimport { Link } from 'react-router-dom'\n\nclass CourseNode extends Component {\n  render() {\n    return (\n        <div className=\"course-node\" onClick={() => this.props.clickHandler(this.props.course)}>\n            <div className=\"row\">\n                <div className=\"col-lg-10 col-sm-9\">\n                    <p className=\"course-code blue-txt\">{this.props.course.courseCode}</p>\n                </div>\n                <div className=\"col-lg-2 col-sm-3\">\n                    <p className=\"credit-header blue-txt\">Credits</p>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-lg-10 col-sm-9\">\n                    <p className=\"course-title\">{this.props.course.courseTitle}</p>\n                </div>\n                <div className=\"col-lg-2 col-sm-3\">\n                    <p className=\"credits\">{this.props.course.credits}</p>\n                </div>\n            </div>\n        </div>\n    );\n  }\n}\n\nexport default CourseNode;\n","/Users/nevashgobin/Documents/myAdvisorDev/myadvisor/src/components/PullCourses.js",["149"],"import React, { useEffect, useState } from \"react\";\n\nconst PullCourses = () => {\n    const [courses, setCourses] = useState([]);\n  \n    async function getCourses() {\n      try {\n        const res = await fetch(\"/courses/all\", {\n          method: \"GET\",\n          headers: { token: localStorage.token },\n        });\n  \n        const parseData = await res.json();\n        setCourses(parseData);\n      } catch (err) {\n        console.error(err.message);\n      }\n    }\n  \n    //Get course data\n    useEffect(() => {\n      getCourses();\n    }, []);\n\n    return (\n        courses\n      );\n    };\n\nexport default PullCourses;","/Users/nevashgobin/Documents/myAdvisorDev/myadvisor/src/components/CareerCheck.js",[],"/Users/nevashgobin/Documents/myAdvisorDev/myadvisor/src/components/PullCareers.js",["150"],"import React, { useEffect, useState } from \"react\";\n\nconst PullCareers = () => {\n    const [careers, setCareers] = useState([]);\n  \n    async function getCareers() {\n      try {\n        const res = await fetch(\"/careers/all\", {\n          method: \"GET\",\n          headers: { token: localStorage.token },\n        });\n  \n        const parseData = await res.json();\n        setCareers(parseData);\n      } catch (err) {\n        console.error(err.message);\n      }\n    }\n  \n    //Get career data\n    useEffect(() => {\n      getCareers();\n    }, []);\n\n    return (\n        careers\n      );\n    };\n\nexport default PullCareers;","/Users/nevashgobin/Documents/myAdvisorDev/myadvisor/src/components/NoTranscript.js",[],"/Users/nevashgobin/Documents/myAdvisorDev/myadvisor/src/components/DetailsCard.js",[],"/Users/nevashgobin/Documents/myAdvisorDev/myadvisor/src/components/Staff/EditCourse.js",["151"],"import React, { useState } from \"react\";\nimport { Button, Form, Col } from \"react-bootstrap\";\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nfunction EditCourse({setShow, row, refreshTable}) {\n    const [validated, setValidated] = useState(false);\n\n    //Toast\n    const notifyEdit = (text) => toast.success(text);\n\n    const handleSubmit = (event) => {\n        const form = event.currentTarget;\n\n        if (form.checkValidity() === false) {\n          event.preventDefault();\n          event.stopPropagation();\n        }\n\n        event.preventDefault();\n        event.stopPropagation();\n        setValidated(true);\n\n        const formData = {\n            courseCode : (form.elements.courseCode.value).replace(/\\s+/g, ''),\n            courseTitle : form.elements.courseTitle.value,\n            credits : form.elements.credits.value,\n            semester : form.elements.semester.value,\n            level : form.elements.level.value,\n            prerequisites : form.elements.prerequisites.value,\n            description: form.elements.description.value\n        }\n\n        editCourse(formData, row.courseCode)\n    };\n\n    async function editCourse(data, code) {\n        try {\n          const res = await fetch(\"http://localhost:5000/courses/edit/\" + code, {\n            method: \"PUT\",\n            headers: {\n                token: localStorage.getItem(\"token\"),\n                \"Content-type\": \"application/json\",\n            },\n            body: JSON.stringify(data),\n          });\n    \n          setShow(false);\n          refreshTable();\n          notifyEdit(data.courseCode + \" Edited!\")\n\n          const status = await res.statusText;\n          \n        } catch (err) {\n          console.error(err.message);\n        }\n    }\n\n\n    return (\n        <>\n            <Form noValidate validated={validated} onSubmit={handleSubmit}>\n                <Form.Group controlId=\"courseCode\">\n                    <Form.Label>Course Code</Form.Label>\n                    <Form.Control required type=\"text\" defaultValue={row.courseCode}/>\n                </Form.Group>\n\n                <Form.Group controlId=\"courseTitle\">\n                    <Form.Label>Course Title</Form.Label>\n                    <Form.Control required type=\"text\" defaultValue={row.courseTitle}/>\n                </Form.Group>\n\n                <Form.Row>\n                    <Form.Group as={Col} md=\"4\" controlId=\"credits\">\n                        <Form.Label>Credits</Form.Label>\n                        <Form.Control required as=\"select\" defaultValue={row.credits}>\n                            <option>1</option>\n                            <option>2</option>\n                            <option>3</option>\n                            <option>4</option>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group as={Col} md=\"4\" controlId=\"semester\">\n                        <Form.Label>Semester</Form.Label>\n                        <Form.Control required as=\"select\" defaultValue={row.semester}>\n                            <option>1</option>\n                            <option>2</option>\n                            <option>3</option>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group as={Col} md=\"4\" controlId=\"level\">\n                        <Form.Label>Level</Form.Label>\n                        <Form.Control required as=\"select\" defaultValue={row.level}>\n                            <option>I</option>\n                            <option>II</option>\n                            <option>III</option>\n                        </Form.Control>\n                    </Form.Group>\n\n                </Form.Row>\n\n                <Form.Group controlId=\"prerequisites\">\n                    <Form.Label>Prerequisites</Form.Label>\n                    <Form.Control required type=\"text\" defaultValue={row.prerequisites}/>\n                </Form.Group>\n\n                <Form.Group controlId=\"description\">\n                    <Form.Label>Description</Form.Label>\n                    <Form.Control required as=\"textarea\" rows={4} defaultValue={row.description}/>\n                </Form.Group>\n\n                <div class=\"float-right\"><Button type=\"submit\" class=\"btn btn-custom\">Submit</Button></div>\n            </Form>\n\n            <ToastContainer \n                pauseOnHover\n                position=\"bottom-right\"\n            />\n        </>\n    );\n}\n\nexport default EditCourse;","/Users/nevashgobin/Documents/myAdvisorDev/myadvisor/src/components/Staff/NavigationBlock.js",[],"/Users/nevashgobin/Documents/myAdvisorDev/myadvisor/src/components/sidebar.js",["152","153","154","155","156","157","158","159","160"],"/Users/nevashgobin/Documents/myAdvisorDev/myadvisor/src/components/LinearDeterminate.js",["161","162","163","164"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport { blue, red } from '@material-ui/core/colors';\nimport { FaBlackberry } from 'react-icons/fa';\nimport green from '@material-ui/core/colors/green';\n\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <LinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\n          props.value,\n        )}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nLinearProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n  },\n   \n});\n\nexport default function LinearWithValueLabel() {\n  const classes = useStyles();\n  const [progress, setProgress] = React.useState(10);\n\n  React.useEffect(() => {\n    const timer = setInterval(() => {\n      setProgress((prevProgress) => (prevProgress >= 100 ? 10 : prevProgress + 10));\n    }, 800);\n    \n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n\n  return (\n    <div className={classes.root}>\n      <LinearProgressWithLabel value={progress} color=\"secondary\" />\n    </div>\n  );\n}\n",{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","severity":1,"message":"170","line":1,"column":50,"nodeType":"171","messageId":"172","endLine":1,"endColumn":58},{"ruleId":"169","severity":1,"message":"173","line":2,"column":27,"nodeType":"171","messageId":"172","endLine":2,"endColumn":33},{"ruleId":"174","severity":1,"message":"175","line":43,"column":41,"nodeType":"176","messageId":"177","endLine":43,"endColumn":43},{"ruleId":"174","severity":1,"message":"175","line":45,"column":49,"nodeType":"176","messageId":"177","endLine":45,"endColumn":51},{"ruleId":"174","severity":1,"message":"175","line":61,"column":49,"nodeType":"176","messageId":"177","endLine":61,"endColumn":51},{"ruleId":"174","severity":1,"message":"175","line":63,"column":49,"nodeType":"176","messageId":"177","endLine":63,"endColumn":51},{"ruleId":"174","severity":1,"message":"175","line":77,"column":41,"nodeType":"176","messageId":"177","endLine":77,"endColumn":43},{"ruleId":"174","severity":1,"message":"175","line":91,"column":41,"nodeType":"176","messageId":"177","endLine":91,"endColumn":43},{"ruleId":"174","severity":1,"message":"175","line":105,"column":41,"nodeType":"176","messageId":"177","endLine":105,"endColumn":43},{"ruleId":"174","severity":1,"message":"175","line":119,"column":41,"nodeType":"176","messageId":"177","endLine":119,"endColumn":43},{"ruleId":"174","severity":1,"message":"175","line":134,"column":41,"nodeType":"176","messageId":"177","endLine":134,"endColumn":43},{"ruleId":"174","severity":1,"message":"175","line":148,"column":41,"nodeType":"176","messageId":"177","endLine":148,"endColumn":43},{"ruleId":"174","severity":1,"message":"175","line":162,"column":41,"nodeType":"176","messageId":"177","endLine":162,"endColumn":43},{"ruleId":"169","severity":1,"message":"178","line":1,"column":17,"nodeType":"171","messageId":"172","endLine":1,"endColumn":25},{"ruleId":"169","severity":1,"message":"170","line":2,"column":16,"nodeType":"171","messageId":"172","endLine":2,"endColumn":24},{"ruleId":"169","severity":1,"message":"179","line":44,"column":17,"nodeType":"171","messageId":"172","endLine":44,"endColumn":20},{"ruleId":"169","severity":1,"message":"180","line":1,"column":17,"nodeType":"171","messageId":"172","endLine":1,"endColumn":26},{"ruleId":"169","severity":1,"message":"181","line":2,"column":10,"nodeType":"171","messageId":"172","endLine":2,"endColumn":20},{"ruleId":"169","severity":1,"message":"182","line":2,"column":10,"nodeType":"171","messageId":"172","endLine":2,"endColumn":14},{"ruleId":"169","severity":1,"message":"183","line":8,"column":11,"nodeType":"171","messageId":"172","endLine":8,"endColumn":15},{"ruleId":"169","severity":1,"message":"184","line":1,"column":17,"nodeType":"171","messageId":"172","endLine":1,"endColumn":26},{"ruleId":"169","severity":1,"message":"180","line":1,"column":27,"nodeType":"171","messageId":"172","endLine":1,"endColumn":36},{"ruleId":"169","severity":1,"message":"185","line":5,"column":17,"nodeType":"171","messageId":"172","endLine":5,"endColumn":23},{"ruleId":"169","severity":1,"message":"186","line":41,"column":11,"nodeType":"171","messageId":"172","endLine":41,"endColumn":21},{"ruleId":"169","severity":1,"message":"187","line":54,"column":17,"nodeType":"171","messageId":"172","endLine":54,"endColumn":23},{"ruleId":"169","severity":1,"message":"182","line":2,"column":10,"nodeType":"171","messageId":"172","endLine":2,"endColumn":14},{"ruleId":"169","severity":1,"message":"188","line":1,"column":8,"nodeType":"171","messageId":"172","endLine":1,"endColumn":13},{"ruleId":"169","severity":1,"message":"188","line":1,"column":8,"nodeType":"171","messageId":"172","endLine":1,"endColumn":13},{"ruleId":"169","severity":1,"message":"187","line":53,"column":17,"nodeType":"171","messageId":"172","endLine":53,"endColumn":23},{"ruleId":"169","severity":1,"message":"189","line":4,"column":8,"nodeType":"171","messageId":"172","endLine":4,"endColumn":19},{"ruleId":"169","severity":1,"message":"190","line":5,"column":8,"nodeType":"171","messageId":"172","endLine":5,"endColumn":14},{"ruleId":"169","severity":1,"message":"191","line":6,"column":8,"nodeType":"171","messageId":"172","endLine":6,"endColumn":15},{"ruleId":"169","severity":1,"message":"192","line":7,"column":8,"nodeType":"171","messageId":"172","endLine":7,"endColumn":12},{"ruleId":"169","severity":1,"message":"193","line":10,"column":8,"nodeType":"171","messageId":"172","endLine":10,"endColumn":28},{"ruleId":"169","severity":1,"message":"194","line":12,"column":10,"nodeType":"171","messageId":"172","endLine":12,"endColumn":17},{"ruleId":"169","severity":1,"message":"195","line":14,"column":10,"nodeType":"171","messageId":"172","endLine":14,"endColumn":33},{"ruleId":"169","severity":1,"message":"196","line":15,"column":10,"nodeType":"171","messageId":"172","endLine":15,"endColumn":14},{"ruleId":"169","severity":1,"message":"197","line":15,"column":16,"nodeType":"171","messageId":"172","endLine":15,"endColumn":19},{"ruleId":"169","severity":1,"message":"196","line":7,"column":10,"nodeType":"171","messageId":"172","endLine":7,"endColumn":14},{"ruleId":"169","severity":1,"message":"197","line":7,"column":16,"nodeType":"171","messageId":"172","endLine":7,"endColumn":19},{"ruleId":"169","severity":1,"message":"198","line":8,"column":10,"nodeType":"171","messageId":"172","endLine":8,"endColumn":22},{"ruleId":"169","severity":1,"message":"199","line":9,"column":8,"nodeType":"171","messageId":"172","endLine":9,"endColumn":13},"no-native-reassign",["200"],"no-negated-in-lhs",["201"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useState' is defined but never used.","'res' is assigned a value but never used.","'useEffect' is defined but never used.","'useHistory' is defined but never used.","'Link' is defined but never used.","'desc' is assigned a value but never used.","'Component' is defined but never used.","'Button' is defined but never used.","'handleShow' is assigned a value but never used.","'status' is assigned a value but never used.","'React' is defined but never used.","'CssBaseline' is defined but never used.","'AppBar' is defined but never used.","'Toolbar' is defined but never used.","'List' is defined but never used.","'LinearWithValueLabel' is defined but never used.","'palette' is defined but never used.","'ListItemSecondaryAction' is defined but never used.","'blue' is defined but never used.","'red' is defined but never used.","'FaBlackberry' is defined but never used.","'green' is defined but never used.","no-global-assign","no-unsafe-negation"]