[{"C:\\Users\\Akeel\\Desktop\\myAdvisorDev\\myadvisor\\src\\index.js":"1","C:\\Users\\Akeel\\Desktop\\myAdvisorDev\\myadvisor\\src\\App.js":"2","C:\\Users\\Akeel\\Desktop\\myAdvisorDev\\myadvisor\\src\\components\\Main.js":"3","C:\\Users\\Akeel\\Desktop\\myAdvisorDev\\myadvisor\\src\\components\\login.js":"4","C:\\Users\\Akeel\\Desktop\\myAdvisorDev\\myadvisor\\src\\components\\StudentProfile.js":"5","C:\\Users\\Akeel\\Desktop\\myAdvisorDev\\myadvisor\\src\\components\\Career.js":"6","C:\\Users\\Akeel\\Desktop\\myAdvisorDev\\myadvisor\\src\\components\\CourseDetails.js":"7","C:\\Users\\Akeel\\Desktop\\myAdvisorDev\\myadvisor\\src\\components\\CourseList.js":"8","C:\\Users\\Akeel\\Desktop\\myAdvisorDev\\myadvisor\\src\\components\\TopBar.js":"9","C:\\Users\\Akeel\\Desktop\\myAdvisorDev\\myadvisor\\src\\components\\CareerCheck.js":"10","C:\\Users\\Akeel\\Desktop\\myAdvisorDev\\myadvisor\\src\\components\\CourseNode.js":"11","C:\\Users\\Akeel\\Desktop\\myAdvisorDev\\myadvisor\\src\\components\\Staff\\Students.js":"12","C:\\Users\\Akeel\\Desktop\\myAdvisorDev\\myadvisor\\src\\components\\Staff\\Courses.js":"13","C:\\Users\\Akeel\\Desktop\\myAdvisorDev\\myadvisor\\src\\components\\Staff\\StaffNavbar.js":"14","C:\\Users\\Akeel\\Desktop\\myAdvisorDev\\myadvisor\\src\\components\\Staff\\StaffDashboard.js":"15","C:\\Users\\Akeel\\Desktop\\myAdvisorDev\\myadvisor\\src\\components\\Staff\\AddCourse.js":"16","C:\\Users\\Akeel\\Desktop\\myAdvisorDev\\myadvisor\\src\\components\\Staff\\CoursesTable.js":"17","C:\\Users\\Akeel\\Desktop\\myAdvisorDev\\myadvisor\\src\\components\\Staff\\NavigationBlocks.js":"18","C:\\Users\\Akeel\\Desktop\\myAdvisorDev\\myadvisor\\src\\components\\Staff\\Calendar.js":"19","C:\\Users\\Akeel\\Desktop\\myAdvisorDev\\myadvisor\\src\\components\\Staff\\EditCourse.js":"20","C:\\Users\\Akeel\\Desktop\\myAdvisorDev\\myadvisor\\src\\components\\Staff\\NavigationBlock.js":"21"},{"size":392,"mtime":1615227622886,"results":"22","hashOfConfig":"23"},{"size":420,"mtime":1615242471209,"results":"24","hashOfConfig":"23"},{"size":4566,"mtime":1615243218564,"results":"25","hashOfConfig":"23"},{"size":5320,"mtime":1615242021633,"results":"26","hashOfConfig":"23"},{"size":5396,"mtime":1615227622883,"results":"27","hashOfConfig":"23"},{"size":1506,"mtime":1615227622875,"results":"28","hashOfConfig":"23"},{"size":3095,"mtime":1615227622876,"results":"29","hashOfConfig":"23"},{"size":1818,"mtime":1615227622876,"results":"30","hashOfConfig":"23"},{"size":663,"mtime":1615242922871,"results":"31","hashOfConfig":"23"},{"size":712,"mtime":1615227622875,"results":"32","hashOfConfig":"23"},{"size":1089,"mtime":1615227622877,"results":"33","hashOfConfig":"23"},{"size":141,"mtime":1615227622883,"results":"34","hashOfConfig":"23"},{"size":3707,"mtime":1615244322065,"results":"35","hashOfConfig":"23"},{"size":429,"mtime":1615237934104,"results":"36","hashOfConfig":"23"},{"size":1381,"mtime":1615239044689,"results":"37","hashOfConfig":"23"},{"size":4382,"mtime":1615244310582,"results":"38","hashOfConfig":"23"},{"size":4293,"mtime":1615227622879,"results":"39","hashOfConfig":"23"},{"size":1974,"mtime":1615227622881,"results":"40","hashOfConfig":"23"},{"size":856,"mtime":1615243676962,"results":"41","hashOfConfig":"23"},{"size":4625,"mtime":1615244341572,"results":"42","hashOfConfig":"23"},{"size":583,"mtime":1615227622880,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"12cx2db",{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"46"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"C:\\Users\\Akeel\\Desktop\\myAdvisorDev\\myadvisor\\src\\index.js",[],["94","95"],"C:\\Users\\Akeel\\Desktop\\myAdvisorDev\\myadvisor\\src\\App.js",["96"],"import { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport Main from './components/Main';\r\n\r\nimport './App.css';\r\n\r\nfunction App () {\r\n\r\n  return (\r\n      <Router>\r\n        <Switch>\r\n          <Route\r\n            path=\"/\"\r\n            render={(props) => <Main {...props} />}\r\n          />\r\n        </Switch>\r\n      </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Akeel\\Desktop\\myAdvisorDev\\myadvisor\\src\\components\\Main.js",["97","98","99","100","101","102","103","104","105","106","107","108"],"import React, { useState } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Redirect} from \"react-router-dom\";\r\n\r\n//Student Imports\r\nimport StudentProfile from './StudentProfile';\r\nimport CourseList from './CourseList';\r\nimport CourseDetails from './CourseDetails';\r\nimport Career from './Career';\r\n\r\n//Staff Imports\r\nimport StaffDashboard from './Staff/StaffDashboard';\r\nimport StaffCourses from './Staff/Courses';\r\nimport Students from './Staff/Students';\r\n\r\n//Global Imports\r\nimport \"../App.css\"\r\nimport \"../assets/css/Staff.css\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Login from \"./login\";\r\nimport TopBar from '../components/TopBar';\r\n\r\nfunction Main() {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(localStorage.getItem(\"auth\"));\r\n  const [user, setUser] = useState(localStorage.getItem(\"user\"));\r\n\r\n  const setAuth = (boolean) => {\r\n    setIsAuthenticated(boolean);\r\n  };\r\n\r\n  const setType = (value) => {\r\n    setUser(value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"main-panel\">\r\n      {user ? <TopBar></TopBar> : null}\r\n      <Switch>\r\n        <Route\r\n          exact\r\n          path=\"/\"\r\n          render={(props) =>\r\n            {\r\n              if(isAuthenticated && user==\"student\"){\r\n                return(<Redirect to=\"/home\"/>)\r\n              } else if (isAuthenticated && user==\"admin\"){\r\n                return(<Redirect to=\"/staff\"/>)\r\n              } else {\r\n                return(<Redirect to=\"/login\" />)\r\n              }\r\n            }\r\n          }\r\n        />\r\n\r\n        <Route\r\n          exact\r\n          path=\"/login\"\r\n          render={(props) =>\r\n            {\r\n              if(!isAuthenticated){\r\n                return <Login {...props} setAuth={setAuth} setType={setType}/>\r\n              } else if (isAuthenticated && user==\"admin\"){\r\n                return(<Redirect to=\"/staff\" />)\r\n              } else if (isAuthenticated && user==\"student\"){\r\n                return(<Redirect to=\"/home\" />)\r\n              }\r\n            }\r\n          }\r\n        />\r\n\r\n        {/*Student Routes*/}\r\n\r\n        <Route\r\n          exact\r\n          path=\"/home\"\r\n          render={(props) =>\r\n            {\r\n              if(isAuthenticated && user==\"student\"){\r\n                return <StudentProfile {...props} />\r\n              } else {\r\n                return(<Redirect to=\"/\" />)\r\n              }\r\n            }\r\n          }\r\n        />\r\n\r\n        <Route\r\n          exact\r\n          path=\"/courses\"\r\n          render={(props) =>\r\n            {\r\n              if(isAuthenticated && user==\"student\"){\r\n                return <CourseList {...props} />\r\n              } else {\r\n                return(<Redirect to=\"/\" />)\r\n              }\r\n            }\r\n          }\r\n        />\r\n\r\n        <Route\r\n          exact\r\n          path=\"/coursedetails\"\r\n          render={(props) =>\r\n            {\r\n              if(isAuthenticated && user==\"student\"){\r\n                return <CourseDetails {...props} />\r\n              } else {\r\n                return(<Redirect to=\"/\" />)\r\n              }\r\n            }\r\n          }\r\n        />\r\n\r\n        <Route\r\n          exact\r\n          path=\"/career\"\r\n          render={(props) =>\r\n            {\r\n              if(isAuthenticated && user==\"student\"){\r\n                return <Career {...props} />\r\n              } else {\r\n                return(<Redirect to=\"/\" />)\r\n              }\r\n            }\r\n          }\r\n        />    \r\n\r\n        {/*Staff Routes*/}\r\n        <Route\r\n          exact\r\n          path=\"/staff\"\r\n          render={(props) =>\r\n            {\r\n              if(isAuthenticated && user==\"admin\"){\r\n                return <StaffDashboard {...props} />\r\n              } else {\r\n                return(<Redirect to=\"/\" />)\r\n              }\r\n            }\r\n          }\r\n        />        \r\n\r\n        <Route\r\n          exact\r\n          path=\"/staff/courses\"\r\n          render={(props) =>\r\n            {\r\n              if(isAuthenticated && user==\"admin\"){\r\n                return <StaffCourses {...props} />\r\n              } else {\r\n                return(<Redirect to=\"/\" />)\r\n              }\r\n            }\r\n          }\r\n        />\r\n\r\n        <Route\r\n          exact\r\n          path=\"/staff/students\"\r\n          render={(props) =>\r\n            {\r\n              if(isAuthenticated && user==\"admin\"){\r\n                return <Students {...props} />\r\n              } else {\r\n                return(<Redirect to=\"/\" />)\r\n              }\r\n            }\r\n          }\r\n        />       \r\n\r\n\r\n\r\n\r\n      </Switch>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","C:\\Users\\Akeel\\Desktop\\myAdvisorDev\\myadvisor\\src\\components\\login.js",[],"C:\\Users\\Akeel\\Desktop\\myAdvisorDev\\myadvisor\\src\\components\\StudentProfile.js",[],"C:\\Users\\Akeel\\Desktop\\myAdvisorDev\\myadvisor\\src\\components\\Career.js",[],"C:\\Users\\Akeel\\Desktop\\myAdvisorDev\\myadvisor\\src\\components\\CourseDetails.js",[],"C:\\Users\\Akeel\\Desktop\\myAdvisorDev\\myadvisor\\src\\components\\CourseList.js",[],"C:\\Users\\Akeel\\Desktop\\myAdvisorDev\\myadvisor\\src\\components\\TopBar.js",["109","110"],"import React, { useState } from \"react\";\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Nav, Navbar, Button } from 'react-bootstrap';\r\n\r\nfunction TopBar() {\r\n\r\n  function logOut(){\r\n    localStorage.clear();\r\n    window.location.reload(false);\r\n  }\r\n\r\n  return (\r\n    <Navbar expand=\"lg\" bg=\"primary\" variant=\"dark\">\r\n      <Navbar.Brand><Link to=\"/\" className=\"top-bar-text\">myAdvisor</Link></Navbar.Brand>\r\n      \r\n        <Nav className=\"ml-auto\">\r\n          <Button variant=\"outline-light\" onClick={logOut}>Log Out</Button>\r\n        </Nav>\r\n    \r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default TopBar;\r\n","C:\\Users\\Akeel\\Desktop\\myAdvisorDev\\myadvisor\\src\\components\\CareerCheck.js",[],"C:\\Users\\Akeel\\Desktop\\myAdvisorDev\\myadvisor\\src\\components\\CourseNode.js",[],"C:\\Users\\Akeel\\Desktop\\myAdvisorDev\\myadvisor\\src\\components\\Staff\\Students.js",[],"C:\\Users\\Akeel\\Desktop\\myAdvisorDev\\myadvisor\\src\\components\\Staff\\Courses.js",["111"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport CoursesTable from \"./CoursesTable\";\r\nimport AddCourse from \"./AddCourse\";\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\n\r\nfunction Courses() {\r\n    //Add Course Modal\r\n    const [show, setShow] = useState(false);\r\n    const handleShow = () => setShow(true);\r\n    const handleClose = () => setShow(false);\r\n\r\n    //Table\r\n    const [courses, setCourses] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    //Toast\r\n    const notifyDelete = (text) => toast.error(text);\r\n\r\n    //Get Courses\r\n    async function getCourses() {\r\n        try {\r\n          const res = await fetch(\"http://localhost:5000/courses/all\", {\r\n            method: \"GET\",\r\n          });\r\n    \r\n          const parseData = await res.json();\r\n          setCourses(parseData);\r\n          setLoading(false);\r\n          \r\n        } catch (err) {\r\n          console.error(err.message);\r\n        }\r\n    }\r\n\r\n    //Delete Course\r\n    async function deleteCourse(courseCode) {\r\n        try {\r\n          const res = await fetch(\"http://localhost:5000/courses/delete/\" + courseCode, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                token: localStorage.getItem(\"token\")\r\n            },\r\n          });\r\n    \r\n            setLoading(false);\r\n            refreshTable();\r\n            notifyDelete(courseCode + \" Deleted\")\r\n          \r\n        } catch (err) {\r\n            notifyDelete(err.message)\r\n            console.error(err.message);\r\n        }\r\n    }\r\n\r\n    function confirmDelete(courseCode){\r\n        confirmAlert({\r\n          title: 'Delete Confirmation',\r\n          message: 'Are you sure to do delete ' + courseCode + \"?\",\r\n          buttons: [\r\n            {\r\n              label: 'Yes',\r\n              onClick: () => deleteCourse(courseCode)\r\n            },\r\n            {\r\n              label: 'No',\r\n            }\r\n          ]\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        getCourses();\r\n    }, []);\r\n\r\n\r\n    function refreshTable(){\r\n        setLoading(true);\r\n        getCourses();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div class=\"container\">\r\n                <div class=\"row mt-4\">\r\n                    {/* Courses Table */}\r\n                    <div class=\"col-10\">\r\n                        <div class=\"card h-100\">\r\n                            <div class=\"card-body shadow-sm\">\r\n                                <CoursesTable courses={courses} loading={loading} confirmDelete={confirmDelete} refreshTable={refreshTable}/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Buttons */}\r\n                    <div class=\"col\">\r\n                        <button type=\"button\" class=\"btn btn-custom add-course\" onClick={handleShow}>Add Course</button>\r\n                    </div>\r\n\r\n                    <Modal show={show} onHide={handleClose} size=\"lg\">\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>Add Course</Modal.Title>\r\n                        </Modal.Header>\r\n\r\n                        <Modal.Body>\r\n                            <AddCourse setShow={setShow} refreshTable={refreshTable}/>\r\n                        </Modal.Body>\r\n                    </Modal>\r\n                </div>\r\n            </div>\r\n            <ToastContainer \r\n                pauseOnHover\r\n                position=\"bottom-right\"\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Courses;","C:\\Users\\Akeel\\Desktop\\myAdvisorDev\\myadvisor\\src\\components\\Staff\\StaffNavbar.js",[],"C:\\Users\\Akeel\\Desktop\\myAdvisorDev\\myadvisor\\src\\components\\Staff\\StaffDashboard.js",[],"C:\\Users\\Akeel\\Desktop\\myAdvisorDev\\myadvisor\\src\\components\\Staff\\AddCourse.js",["112"],"import React, { useState } from \"react\";\r\nimport { Button, Form, Col } from \"react-bootstrap\";\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nfunction AddCourse({setShow, refreshTable}) {\r\n    const [validated, setValidated] = useState(false);\r\n\r\n    //Toast\r\n    const notifyAdded = (text) => toast.success(text);\r\n\r\n    const handleSubmit = (event) => {\r\n        const form = event.currentTarget;\r\n\r\n        if (form.checkValidity() === false) {\r\n          event.preventDefault();\r\n          event.stopPropagation();\r\n        }\r\n\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        setValidated(true);\r\n\r\n        const formData = {\r\n            courseCode : (form.elements.courseCode.value).replace(/\\s+/g, ''),\r\n            courseTitle : form.elements.courseTitle.value,\r\n            credits : form.elements.credits.value,\r\n            semester : form.elements.semester.value,\r\n            level : form.elements.level.value,\r\n            prerequisites : form.elements.prerequisites.value,\r\n            description: form.elements.description.value\r\n        }\r\n\r\n        addCourse(formData)\r\n    };\r\n\r\n\r\n    async function addCourse(data) {\r\n        try {\r\n          const res = await fetch(\"http://localhost:5000/courses/add\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                token: localStorage.getItem(\"token\"),\r\n                \"Content-type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(data),\r\n          });\r\n    \r\n          setShow(false);\r\n          refreshTable();\r\n          notifyAdded(data.courseCode + \" Added!\")\r\n\r\n          const status = await res.statusText;\r\n          \r\n        } catch (err) {\r\n          console.error(err.message);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n                <Form.Group controlId=\"courseCode\">\r\n                    <Form.Label>Course Code</Form.Label>\r\n                    <Form.Control required type=\"text\"/>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"courseTitle\">\r\n                    <Form.Label>Course Title</Form.Label>\r\n                    <Form.Control required type=\"text\"/>\r\n                </Form.Group>\r\n\r\n                <Form.Row>\r\n                    <Form.Group as={Col} md=\"4\" controlId=\"credits\">\r\n                        <Form.Label>Credits</Form.Label>\r\n                        <Form.Control required as=\"select\">\r\n                            <option>1</option>\r\n                            <option>2</option>\r\n                            <option>3</option>\r\n                            <option>4</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} md=\"4\" controlId=\"semester\">\r\n                        <Form.Label>Semester</Form.Label>\r\n                        <Form.Control required as=\"select\">\r\n                            <option>1</option>\r\n                            <option>2</option>\r\n                            <option>3</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} md=\"4\" controlId=\"level\">\r\n                        <Form.Label>Level</Form.Label>\r\n                        <Form.Control required as=\"select\">\r\n                            <option>I</option>\r\n                            <option>II</option>\r\n                            <option>III</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                </Form.Row>\r\n\r\n                <Form.Group controlId=\"prerequisites\">\r\n                    <Form.Label>Prerequisites</Form.Label>\r\n                    <Form.Control required type=\"text\"/>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"description\">\r\n                    <Form.Label>Description</Form.Label>\r\n                    <Form.Control required as=\"textarea\" rows={3}/>\r\n                </Form.Group>\r\n\r\n                <div class=\"float-right\"><Button type=\"submit\" class=\"btn btn-custom\">Submit</Button></div>\r\n            </Form>\r\n\r\n            <ToastContainer \r\n                pauseOnHover\r\n                position=\"bottom-right\"\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AddCourse;","C:\\Users\\Akeel\\Desktop\\myAdvisorDev\\myadvisor\\src\\components\\Staff\\CoursesTable.js",["113","114","115"],"import React, { useState, useEffect } from \"react\";\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory, { PaginationProvider, PaginationListStandalone } from 'react-bootstrap-table2-paginator';\r\nimport ToolkitProvider, { Search, CSVExport } from 'react-bootstrap-table2-toolkit';\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport EditCourse from \"./EditCourse\";\r\nimport \"../../assets/css/Staff.css\";\r\n\r\n//TABLE SETUP\r\n\r\nconst columns = [\r\n    { dataField: 'courseCode', text: 'Course Code', csvText: 'Course Code', sort: true },\r\n    { dataField: 'courseTitle', text: 'Course Title', csvText: 'Course Title' },\r\n    { dataField: 'credits', text: 'Credits', csvText: 'Credits', sort: true },\r\n    { dataField: 'semester', text: 'Semester', csvText: 'Semester', sort: true },\r\n]\r\n\r\nconst defaultSorted = [{\r\n  dataField: 'courseCode',\r\n  order: 'asec'\r\n}];\r\n\r\nconst options = {\r\n  custom: true,\r\n  paginationSize: 5,\r\n  pageStartIndex: 1,\r\n  firstPageText: 'First',\r\n  prePageText: 'Back',\r\n  nextPageText: 'Next',\r\n  lastPageText: 'Last',\r\n  sizePerPage: 8,\r\n};\r\n\r\nconst { SearchBar, ClearSearchButton  } = Search;\r\nconst { ExportCSVButton } = CSVExport;\r\n\r\nfunction CoursesTable({courses, loading, refreshTable, confirmDelete}) {\r\n\r\n    //Edit Course Modal\r\n    const [show, setShow] = useState(false);\r\n    const handleShow = () => setShow(true);\r\n    const handleClose = () => setShow(false);\r\n\r\n    const [row, setRow] = useState();\r\n\r\n    //REQUESTS\r\n\r\n    function eCourse(row) {\r\n      setShow(true);\r\n      setRow(row);\r\n    }\r\n\r\n    function dCourse(courseCode) {\r\n      confirmDelete(courseCode);\r\n    }\r\n\r\n    //EXPANDED TABLE ROW\r\n\r\n    const expandRow = {\r\n        onlyOneExpanding: true,\r\n        renderer: row => (\r\n          <div>\r\n            <h3>{ `${row.courseCode}` } - { `${row.courseTitle}` }</h3>\r\n            <br/>\r\n            <h4>Description</h4>\r\n            <p>{ `${row.description}` }</p>\r\n\r\n            <h4>Prerequisites</h4>\r\n            <p>{ `${row.prerequisites}` }</p>\r\n\r\n            <div class=\"btn-group\">\r\n              <button type=\"button\" class=\"btn btn-custom edit-course\" onClick={() => eCourse(row)}>Edit</button>\r\n              <button type=\"button\" class=\"btn btn-danger delete-course\" onClick={() => dCourse(row.courseCode)}>Delete</button>\r\n            </div>\r\n          </div>\r\n        )\r\n    };\r\n\r\n    //TABLE\r\n\r\n    const table = ({ paginationProps, paginationTableProps }) => (\r\n        <>\r\n            <ToolkitProvider\r\n                    keyField=\"courseCode\"\r\n                    data={ courses }\r\n                    columns={ columns }\r\n                    search\r\n                    exportCSV={{\r\n                      fileName: 'courses.csv',\r\n                    }}\r\n                >\r\n                {\r\n                    props => (\r\n                    <div>\r\n                        <SearchBar { ...props.searchProps } />\r\n                        <ClearSearchButton { ...props.searchProps } />\r\n                        <ExportCSVButton { ...props.csvProps }>Export CSV</ExportCSVButton>\r\n                        <BootstrapTable { ...props.baseProps } { ...paginationTableProps } expandRow={ expandRow } defaultSorted={ defaultSorted }/>\r\n                    </div>\r\n                    )\r\n                }\r\n            </ToolkitProvider>\r\n            <PaginationListStandalone { ...paginationProps } />\r\n        </>\r\n  );\r\n\r\n  return (\r\n      <>\r\n          {loading ? (\r\n            <div class=\"d-flex justify-content-center\">\r\n              <div class=\"spinner-border text-primary\" role=\"status\">\r\n                <span class=\"sr-only\">Loading...</span>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <PaginationProvider pagination={paginationFactory(options)}>\r\n              { table }\r\n            </PaginationProvider>\r\n          )}\r\n\r\n          <Modal show={show} onHide={handleClose} size=\"lg\">\r\n              <Modal.Header closeButton>\r\n                  <Modal.Title>Edit Course</Modal.Title>\r\n              </Modal.Header>\r\n\r\n              <Modal.Body>\r\n                <EditCourse setShow={setShow} row={row} refreshTable={refreshTable}/>\r\n              </Modal.Body>\r\n          </Modal>\r\n        \r\n      </>\r\n\r\n  );\r\n}\r\n\r\nexport default CoursesTable;","C:\\Users\\Akeel\\Desktop\\myAdvisorDev\\myadvisor\\src\\components\\Staff\\NavigationBlocks.js",[],"C:\\Users\\Akeel\\Desktop\\myAdvisorDev\\myadvisor\\src\\components\\Staff\\Calendar.js",[],"C:\\Users\\Akeel\\Desktop\\myAdvisorDev\\myadvisor\\src\\components\\Staff\\EditCourse.js",["116"],"import React, { useState } from \"react\";\r\nimport { Button, Form, Col } from \"react-bootstrap\";\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nfunction EditCourse({setShow, row, refreshTable}) {\r\n    const [validated, setValidated] = useState(false);\r\n\r\n    //Toast\r\n    const notifyEdit = (text) => toast.success(text);\r\n\r\n    const handleSubmit = (event) => {\r\n        const form = event.currentTarget;\r\n\r\n        if (form.checkValidity() === false) {\r\n          event.preventDefault();\r\n          event.stopPropagation();\r\n        }\r\n\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        setValidated(true);\r\n\r\n        const formData = {\r\n            courseCode : (form.elements.courseCode.value).replace(/\\s+/g, ''),\r\n            courseTitle : form.elements.courseTitle.value,\r\n            credits : form.elements.credits.value,\r\n            semester : form.elements.semester.value,\r\n            level : form.elements.level.value,\r\n            prerequisites : form.elements.prerequisites.value,\r\n            description: form.elements.description.value\r\n        }\r\n\r\n        editCourse(formData, row.courseCode)\r\n    };\r\n\r\n    async function editCourse(data, code) {\r\n        try {\r\n          const res = await fetch(\"http://localhost:5000/courses/edit/\" + code, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                token: localStorage.getItem(\"token\"),\r\n                \"Content-type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(data),\r\n          });\r\n    \r\n          setShow(false);\r\n          refreshTable();\r\n          notifyEdit(data.courseCode + \" Edited!\")\r\n\r\n          const status = await res.statusText;\r\n          \r\n        } catch (err) {\r\n          console.error(err.message);\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n                <Form.Group controlId=\"courseCode\">\r\n                    <Form.Label>Course Code</Form.Label>\r\n                    <Form.Control required type=\"text\" defaultValue={row.courseCode}/>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"courseTitle\">\r\n                    <Form.Label>Course Title</Form.Label>\r\n                    <Form.Control required type=\"text\" defaultValue={row.courseTitle}/>\r\n                </Form.Group>\r\n\r\n                <Form.Row>\r\n                    <Form.Group as={Col} md=\"4\" controlId=\"credits\">\r\n                        <Form.Label>Credits</Form.Label>\r\n                        <Form.Control required as=\"select\" defaultValue={row.credits}>\r\n                            <option>1</option>\r\n                            <option>2</option>\r\n                            <option>3</option>\r\n                            <option>4</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} md=\"4\" controlId=\"semester\">\r\n                        <Form.Label>Semester</Form.Label>\r\n                        <Form.Control required as=\"select\" defaultValue={row.semester}>\r\n                            <option>1</option>\r\n                            <option>2</option>\r\n                            <option>3</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} md=\"4\" controlId=\"level\">\r\n                        <Form.Label>Level</Form.Label>\r\n                        <Form.Control required as=\"select\" defaultValue={row.level}>\r\n                            <option>I</option>\r\n                            <option>II</option>\r\n                            <option>III</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                </Form.Row>\r\n\r\n                <Form.Group controlId=\"prerequisites\">\r\n                    <Form.Label>Prerequisites</Form.Label>\r\n                    <Form.Control required type=\"text\" defaultValue={row.prerequisites}/>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"description\">\r\n                    <Form.Label>Description</Form.Label>\r\n                    <Form.Control required as=\"textarea\" rows={4} defaultValue={row.description}/>\r\n                </Form.Group>\r\n\r\n                <div class=\"float-right\"><Button type=\"submit\" class=\"btn btn-custom\">Submit</Button></div>\r\n            </Form>\r\n\r\n            <ToastContainer \r\n                pauseOnHover\r\n                position=\"bottom-right\"\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default EditCourse;","C:\\Users\\Akeel\\Desktop\\myAdvisorDev\\myadvisor\\src\\components\\Staff\\NavigationBlock.js",[],{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":1,"column":50,"nodeType":"123","messageId":"124","endLine":1,"endColumn":58},{"ruleId":"121","severity":1,"message":"125","line":2,"column":27,"nodeType":"123","messageId":"124","endLine":2,"endColumn":33},{"ruleId":"126","severity":1,"message":"127","line":43,"column":41,"nodeType":"128","messageId":"129","endLine":43,"endColumn":43},{"ruleId":"126","severity":1,"message":"127","line":45,"column":49,"nodeType":"128","messageId":"129","endLine":45,"endColumn":51},{"ruleId":"126","severity":1,"message":"127","line":61,"column":49,"nodeType":"128","messageId":"129","endLine":61,"endColumn":51},{"ruleId":"126","severity":1,"message":"127","line":63,"column":49,"nodeType":"128","messageId":"129","endLine":63,"endColumn":51},{"ruleId":"126","severity":1,"message":"127","line":77,"column":41,"nodeType":"128","messageId":"129","endLine":77,"endColumn":43},{"ruleId":"126","severity":1,"message":"127","line":91,"column":41,"nodeType":"128","messageId":"129","endLine":91,"endColumn":43},{"ruleId":"126","severity":1,"message":"127","line":105,"column":41,"nodeType":"128","messageId":"129","endLine":105,"endColumn":43},{"ruleId":"126","severity":1,"message":"127","line":119,"column":41,"nodeType":"128","messageId":"129","endLine":119,"endColumn":43},{"ruleId":"126","severity":1,"message":"127","line":134,"column":41,"nodeType":"128","messageId":"129","endLine":134,"endColumn":43},{"ruleId":"126","severity":1,"message":"127","line":148,"column":41,"nodeType":"128","messageId":"129","endLine":148,"endColumn":43},{"ruleId":"126","severity":1,"message":"127","line":162,"column":41,"nodeType":"128","messageId":"129","endLine":162,"endColumn":43},{"ruleId":"121","severity":1,"message":"130","line":1,"column":17,"nodeType":"123","messageId":"124","endLine":1,"endColumn":25},{"ruleId":"121","severity":1,"message":"122","line":2,"column":16,"nodeType":"123","messageId":"124","endLine":2,"endColumn":24},{"ruleId":"121","severity":1,"message":"131","line":44,"column":17,"nodeType":"123","messageId":"124","endLine":44,"endColumn":20},{"ruleId":"121","severity":1,"message":"132","line":54,"column":17,"nodeType":"123","messageId":"124","endLine":54,"endColumn":23},{"ruleId":"121","severity":1,"message":"133","line":1,"column":27,"nodeType":"123","messageId":"124","endLine":1,"endColumn":36},{"ruleId":"121","severity":1,"message":"134","line":5,"column":17,"nodeType":"123","messageId":"124","endLine":5,"endColumn":23},{"ruleId":"121","severity":1,"message":"135","line":41,"column":11,"nodeType":"123","messageId":"124","endLine":41,"endColumn":21},{"ruleId":"121","severity":1,"message":"132","line":53,"column":17,"nodeType":"123","messageId":"124","endLine":53,"endColumn":23},"no-native-reassign",["136"],"no-negated-in-lhs",["137"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useState' is defined but never used.","'res' is assigned a value but never used.","'status' is assigned a value but never used.","'useEffect' is defined but never used.","'Button' is defined but never used.","'handleShow' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]